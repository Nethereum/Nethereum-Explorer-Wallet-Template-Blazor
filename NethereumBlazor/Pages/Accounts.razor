@page "/accounts"
@inherits ReactiveComponentBase<AccountsViewModel>
@using Microsoft.AspNetCore.Components
@using NethereumBlazor.Services
@using NethereumBlazor.ViewModels
@inject IWeb3ProviderService Web3ProviderService

<div class="card">
    <div class="card-header">
        <h5>Accounts</h5>
    </div>
    <div class="card-body">

        <div class="form-group row">
            <label for="privateKey" class="col-sm-1 col-form-label">Private key:</label>
            <div class="col-sm-10">
                <RxTextInput @ref="PrivateKey" Id="privateKey" />
                <small id="privateKeyUrlHelp" class="form-text text-muted">Enter the private key to add a new account, for example: "0xb5b1870957d373ef0eeffecc6e4812c0fd08f554b37b233526acc331bf1544f7" or "0xb5b2324bf02d491b087dd6485019daf38882e3ac2d59e96d44251a6705cabb9a"</small>

                <RxButton @ref="AddAccountBtn">Add Account</RxButton>
                <div class="alert alert-danger" style="margin-top: 10px" role="alert">
                    <strong>Warning:</strong> This application is targeted to <strong>developers and experimental</strong>. Private keys are only stored in memory, nevertheless if using accounts from <strong>Mainnet</strong>, it is recommended to download the source from <a href="https://github.com/Nethereum/NethereumBlazor" class="alert-link" target="_blank">Github</a> and run it locally.
                </div>
            </div>

        </div>

        @if (ViewModel.Accounts != null && ViewModel.Accounts.Count > 0)
        {
            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <thead class="grid-table-head">
                        <tr>
                            <th scope="col">Account</th>
                            <th scope="col">Transactions</th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in ViewModel.Accounts.Items)
                        {
                            <tr>
                                <td>@item.Address</td>
                                <td>

                                    @if (item.GetTransactions(Web3ProviderService.ChainId).Count > 0)
                                    {
                                        <table class="table table-bordered table-hover">
                                            <thead class="grid-table-head">
                                                <tr>
                                                    <th scope="col">Transaction</th>
                                                    <th scope="col">Pending</th>
                                                </tr>
                                            </thead>
                                            @foreach (var transactionInfo in item.GetTransactions(Web3ProviderService.ChainId))
                                            {
                                                <tr>
                                                    <td><a href="/transaction/@transactionInfo.TransactionHash">@transactionInfo.TransactionHash</a></td>
                                                    <td>@transactionInfo.Pending</td>
                                                </tr>
                                            }
                                        </table>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@functions {
    //workaround search for the time being
    [Parameter]
    public string BlockNumber { get; set; }
    [Parameter]
    public string TransactionHash { get; set; }
}
