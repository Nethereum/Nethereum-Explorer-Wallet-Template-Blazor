@page "/block/{BlockNumber}"
@inherits ReactiveComponentBase<BlockTransactionsViewModel>

@using Blazor.FlexGrid.Components
@using Blazor.FlexGrid.Components.Configuration
@using Microsoft.AspNetCore.Components
@using NethereumBlazor.ViewModels
@inject BlazorComponentColumnCollection<TransactionViewModel> Collection

<div class="card">
    <div class="card-header">
        <div class="d-flex align-items-center">
            <h5>Block: @BlockNumber</h5>
            @if (ViewModel.Loading)
            {
                <div class="spinner-grow spinner-grow-sm ml-auto" role="status" aria-hidden="true"></div>
            }
        </div>
    </div>
    <div class="card-body">
        @if (!ViewModel.Loading && ViewModel.BlockFound)
        {

            <table class="table table-responsive-sm">
                <tr>
                    <th class="thead-dark" scope="row">Hash:</th>
                    <td>@ViewModel.Block.Hash</td>
                </tr>
                <tr>
                    <th scope="row">Number:</th>
                    <td>@ViewModel.Block.Number.ToString()</td>
                </tr>
                <tr>
                    <th scope="row">Author:</th>
                    <td>@ViewModel.Block.Author</td>
                </tr>
                <tr>
                    <th scope="row">Parent Hash:</th>
                    <td>@ViewModel.Block.ParentHash</td>
                </tr>
                <tr>
                    <th scope="row">Time:</th>
                    <td>@ViewModel.Block.Time</td>
                </tr>
                <tr>
                    <th scope="row">Gas Used:</th>
                    <td>@ViewModel.Block.GasUsed</td>
                </tr>
            </table>


            <GridView DataAdapter="@dataAdapter" PageSize="10"></GridView>

        }

        @if (!ViewModel.Loading && !ViewModel.BlockFound)
        {
            <div>No Block Found</div>
        }
    </div>
</div>

@{
    RenderFragment<TransactionViewModel> transactionHash = (transaction) => @<a href="/transaction/@transaction.TransactionHash">@transaction.TransactionHash</a>;
Collection.AddColumnValueRenderFunction(txn => txn.TransactionHash, transactionHash);
}

@functions {

    //workaround search for the time being
    [Parameter]
    public string BlockNumber { get; set; }

    [Parameter]
    public string TransactionHash { get; set; }
}
