@page "/block/{BlockNumber}"
@using System.Numerics
@using Blazor.FlexGrid.Components.Configuration
@using Blazor.FlexGrid.DataAdapters
@using Microsoft.AspNetCore.Components
@using NethereumBlazor.ViewModels
@inject BlockTransactionsViewModel BlockTransactionsViewModel
@inject BlazorComponentColumnCollection<TransactionViewModel> Collection

    <div class="card">
        <div class="card-header">
            <div class="d-flex align-items-center">
                <h5>Block: @BlockNumber</h5>
                @if (BlockTransactionsViewModel.Loading)
                {
                    <div class="spinner-grow spinner-grow-sm ml-auto" role="status" aria-hidden="true"></div>
                }
            </div>
        </div>
        <div class="card-body">
            @if (!BlockTransactionsViewModel.Loading && BlockTransactionsViewModel.BlockFound)
            {

                <table class="table table-responsive-sm">
                    <tr>
                        <th class="thead-dark" scope="row">Hash:</th>
                        <td>@BlockTransactionsViewModel.Block.Hash</td>
                    </tr>
                    <tr>
                        <th scope="row">Number:</th>
                        <td>@BlockTransactionsViewModel.Block.Number.ToString()</td>
                    </tr>
                    <tr>
                        <th scope="row">Author:</th>
                        <td>@BlockTransactionsViewModel.Block.Author</td>
                    </tr>
                    <tr>
                        <th scope="row">Parent Hash:</th>
                        <td>@BlockTransactionsViewModel.Block.ParentHash</td>
                    </tr>
                    <tr>
                        <th scope="row">Time:</th>
                        <td>@BlockTransactionsViewModel.Block.Time</td>
                    </tr>
                    <tr>
                        <th scope="row">Gas Used:</th>
                        <td>@BlockTransactionsViewModel.Block.GasUsed</td>
                    </tr>
                </table>


                <GridView DataAdapter="@dataAdapter" PageSize="10"></GridView>

            }

            @if (!BlockTransactionsViewModel.Loading && !BlockTransactionsViewModel.BlockFound)
            {
                <div>No Block Found</div>
            }
        </div>
    </div>

    @{
        RenderFragment<TransactionViewModel> transactionHash = (transaction) => @<a href="/transaction/@transaction.TransactionHash">@transaction.TransactionHash</a>;
Collection.AddColumnValueRenderFunction(txn => txn.TransactionHash, transactionHash);
    }

    @functions {

        //workaround search for the time being
        [Parameter]
        string BlockNumber { get; set; }

        [Parameter]
        string TransactionHash { get; set; }


        CollectionTableDataAdapter<TransactionViewModel> dataAdapter;



        public int TransactionCount { get; set; }

        protected override async Task OnParametersSetAsync()
        {
            BlockTransactionsViewModel.BlockNumber = BigInteger.Parse(BlockNumber);
            BlockTransactionsViewModel.Transactions.Connect()
                .Subscribe(_ =>
                    {
                        TransactionCount = BlockTransactionsViewModel.Transactions.Count;
                        dataAdapter = new CollectionTableDataAdapter<TransactionViewModel>(BlockTransactionsViewModel.Transactions.Items.ToArray());

                        StateHasChanged();
                    });
        }
    }
